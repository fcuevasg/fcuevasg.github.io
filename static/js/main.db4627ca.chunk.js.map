{"version":3,"sources":["components/interfaces/Interfaces.tsx","components/timer/assets/play.svg","components/timer/assets/pause.svg","components/timer/assets/reset.svg","components/timer/assets/next.svg","Helpers.tsx","components/timer/timer.tsx","components/teamList/teamList.tsx","components/primeDirective/primeDirective.tsx","components/gridLayout/GridLayout.tsx","components/gridLayout/WidthProviderOwn.tsx","assets/theme-icon.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DAILYSTATES","EMOTIONALSTATES","getFormattedDate","date","dd","getDate","mm","getMonth","yyyy","getFullYear","day","toString","month","getFormattedTime","timer","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","Timer","props","useState","redValue","setRedValue","greenValue","setGreenValue","useTimer","setIndex","index","members","setMembers","isActive","isPaused","handleStart","handlePause","handleResume","handleReset","handlePrev","handleNext","Date","currentTime","SetCurrentTime","turnRedder","setInterval","className","style","color","time","timeClass","dailyConfig","localStorageConfigString","localStorage","getItem","length","JSON","parse","setItem","stringify","dailyEndHours","dailyStartHours","dailyEndMinutes","dailyStartMinutes","dailyDuration","extraHours","dailyCloseToEndHours","dailyCloseToEndMinutes","getTimeClass","toLocaleTimeString","hour","minute","seconds","parseInt","setTimeout","formatTime","onClick","src","pauseIcon","alt","playIcon","disabled","resetIcon","nextIcon","initialState","React","setTimer","setIsActive","setIsPaused","countRef","useRef","listContainerEl","document","getElementsByClassName","current","clearInterval","saveMemberTime","scroll","top","scrollTop","behavior","localStorageMembers","currentMember","today","dailyData","status","emotionalStatus","TeamList","listItemClasses","totalDailyTime","useEffect","console","log","removeItem","getMemberTimeClass","member","getMemberTodayTime","memberTodayTime","replace","map","speakingIndex","setSpeakingIndex","name","data-status","BLOCKED","none","nextMemberStatus","data-emotional-status","DOWN","nextMemberEmotionalStatus","resetDailyTime","PrimeDirective","content","author","breakpoints","lg","md","sm","xs","xxs","cols","GridLayoutResizable","TeamMembers","auxMembers","removeMember","event","target","parentNode","querySelector","innerHTML","filter","memb","isDraggable","isResizable","width","overflowY","overflowX","minHeight","maxHeight","containerPadding","rowHeight","margin","onLayoutChange","layout","sort","a","b","y","item","push","i","data-grid","x","w","h","App","getMembersFromLocalStorage","isEditMode","setIsEditMode","theme","setTheme","newMember","setnewMember","newMembers","addMember","newMemberData","pandoraMembers","generatePandoraMembers","themeIcon","type","value","onChange","placeholder","onKeyDown","code","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db4627ca.chunk.js","sourcesContent":["export interface IGridBreakpoints {\n  lg: number;\n  md: number;\n  sm: number;\n  xs: number;\n  xxs: number;\n\n  [P: string]: number;\n}\n\nexport enum DAILYSTATES{\n  none=0,\n  OK=1,\n  NEEDSHELP=2,\n  BLOCKED=3\n}\n\nexport enum EMOTIONALSTATES{\n  none=0,\n  GOOD=1,\n  BAD=2,\n  SICK=3,\n  APATHETIC=4,\n  PLETHORIC=5,\n  DOWN=6\n}\n\nexport interface DailyData{\n  emotionalStatus: EMOTIONALSTATES;\n  status:DAILYSTATES,\n  time:number\n}\n\nexport interface TeamMember{\n  name:string,\n  email?:string,\n  dailyData:{\n    [key: number]: DailyData;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/play.b31da51e.svg\";","export default __webpack_public_path__ + \"static/media/pause.418b9d2a.svg\";","export default __webpack_public_path__ + \"static/media/reset.377fbb94.svg\";","export default __webpack_public_path__ + \"static/media/next.178cb9e4.svg\";","export const getFormattedDate = (date: Date) => {\n  let dd = date.getDate();\n  let mm = date.getMonth() + 1;\n\n  const yyyy = date.getFullYear();\n\n  let day = dd.toString();\n  let month = mm.toString();\n\n  if (dd < 10) {\n      day = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n      month = \"0\" + mm;\n  }\n\n  return yyyy + month + day;\n};\n\nexport const getFormattedTime = (timer: number) => {\n  const getSeconds = `0${timer % 60}`.slice(-2);\n  const minutes = `${Math.floor(timer / 60)}`;\n  const getMinutes = `0${(minutes as unknown as number) % 60}`.slice(-2);\n  const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n\n  return `${getHours} : ${getMinutes} : ${getSeconds}`;\n};\n","import React, { useState } from \"react\";\n\nimport \"./timer.scss\";\nimport playIcon from \"./assets/play.svg\";\nimport pauseIcon from \"./assets/pause.svg\";\nimport resetIcon from \"./assets/reset.svg\";\nimport nextIcon from \"./assets/next.svg\";\nimport { TeamMember } from \"../interfaces/Interfaces\";\nimport { getFormattedDate, getFormattedTime } from \"../../Helpers\";\n\ninterface timerProps {\n  /**Index of the list of people speaking to highlight who's turn */\n  index: number;\n  setIndex: any;\n  members: TeamMember[];\n  setMembers: any;\n}\n\nexport const Timer = (props: timerProps) => {\n  \n  const [redValue, setRedValue] = useState(0);\n  const [greenValue, setGreenValue] = useState(180);\n  \n  const {\n    timer,\n    isActive,\n    isPaused,\n    handleStart,\n    handlePause,\n    handleResume,\n    handleReset,\n    handlePrev,\n    handleNext,\n  } = useTimer(0, props.setIndex, props.index, props.members, props.setMembers, setRedValue, setGreenValue);\n\n  const [currentTime, SetCurrentTime] = useState(new Date());\n\n  const formatTime = (timer: number) => {\n    const minutes = Math.floor(timer / 60);\n    const seconds = parseInt(`${timer % 60}`.slice(-2));\n\n    if (isActive && isPaused && minutes < 3) {\n    \n      setTimeout(()=>{\n        if (seconds > 0 && seconds % 10 === 0)\n          turnRedder();\n      },1000)\n    }\n\n    return getFormattedTime(timer);\n  };\n\n  const turnRedder = () => {\n    setRedValue(redValue + 10);\n    setGreenValue(greenValue - 10);\n  };\n\n  const getTimeClass = (time: Date) => {\n    let timeClass = \"beforeTime\";\n\n    let dailyConfig = {\n      \"dailyStartHours\": 9,\n      \"dailyStartMinutes\": 30,\n      \"dailyDuration\": 30,\n    };\n\n    const localStorageConfigString = localStorage.getItem(\"scrumtools-config\");\n\n    if (localStorageConfigString && localStorageConfigString?.length > 0) {\n      dailyConfig = JSON.parse(localStorageConfigString);\n    } else {\n      localStorage.setItem(\"scrumtools-config\", JSON.stringify(dailyConfig));\n    }\n\n    let dailyEndHours = dailyConfig.dailyStartHours;\n    let dailyEndMinutes = dailyConfig.dailyStartMinutes + dailyConfig.dailyDuration;\n    if(dailyEndMinutes > 59){\n      const extraHours = Math.floor(dailyEndMinutes/60);\n      dailyEndHours += extraHours;\n      dailyEndMinutes = dailyEndMinutes - (extraHours*60);\n    }\n\n    let dailyCloseToEndHours = dailyEndHours;\n    let dailyCloseToEndMinutes = dailyEndMinutes - 5;\n    if(dailyCloseToEndMinutes < 0) {\n      dailyCloseToEndHours--;\n      dailyCloseToEndMinutes += 60;\n    }\n\n    if (time.getHours() > dailyEndHours || (time.getHours() === dailyEndHours && time.getMinutes() >= dailyEndMinutes)) {\n      timeClass = \"overTime\";\n    } else if ((time.getHours() === dailyConfig.dailyStartHours && time.getMinutes() >= dailyConfig.dailyStartMinutes) || (time.getHours() === dailyEndHours && time.getMinutes() < dailyEndMinutes)) {\n      if (time.getHours() === dailyCloseToEndHours && time.getMinutes() >= dailyCloseToEndMinutes) {\n        timeClass = \"closeToEnd\";\n      } else {\n        timeClass = \"inTime\";\n      }\n    }\n\n    return timeClass;\n  };\n\n  setInterval(() => {\n    const currentTime = new Date();\n\n    if (currentTime.getSeconds() === 0) {\n      SetCurrentTime(new Date());\n    }\n  }, 1000);\n\n  return (\n    <div className=\"stopWatch-container\">\n      <div className=\"stopWatch\">\n        {/* <h3>Personal time</h3> */}\n        <div\n          className=\"stopwatch-card\"\n          style={{ color: `rgb(${redValue},${greenValue},0)` }}\n        >\n          <div className={\"currentTime \" + getTimeClass(currentTime)}>\n            {currentTime.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n            })}\n          </div>\n          <p className=\"stopWatch__timer\">{formatTime(timer)}</p>\n          <div className=\"buttons\">\n            {!isActive && !isPaused ? (\n              <button className=\"startButton\" onClick={handleStart}>\n                <img src={playIcon} alt=\"Play\" />\n              </button>\n            ) : isPaused ? (\n              <button className=\"pauseButton\" onClick={handlePause}>\n                <img src={pauseIcon} alt=\"Pause\" />\n              </button>\n            ) : (\n              <button className=\"resumeButton\" onClick={handleResume}>\n                <img src={playIcon} alt=\"Resume\" />\n              </button>\n            )}\n            <button\n              className=\"resetButton\"\n              onClick={() => {\n                handleReset()\n              }}\n              disabled={!isActive}\n            >\n              <img src={resetIcon} alt=\"Reset\" />\n            </button>\n            <button\n              className={\"prevButton\" + (props.index === 0 ? \" disabled\" : \"\")}\n              onClick={() => {\n                handlePrev()\n              }}\n            >\n              <img src={nextIcon} alt=\"Prev\" />\n            </button>\n            <button\n              className={\"nextButton\" + (props.index === props.members.length - 1 ? \" disabled\" : \"\")}\n              onClick={() => {\n                handleNext()\n              }}\n            >\n              <img src={nextIcon} alt=\"Next\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst useTimer = (\n  initialState = 0,\n  setIndex: any,\n  index: number,\n  members: any,\n  setMembers: any,\n  setRedValue: (n:number)=>void,\n  setGreenValue: (n:number)=>void\n) => {\n  const [timer, setTimer] = React.useState(initialState);\n  const [isActive, setIsActive] = React.useState(false);\n  const [isPaused, setIsPaused] = React.useState(false);\n  const countRef = React.useRef<any>();\n  const listContainerEl = document.getElementsByClassName('listContainer')[0];\n\n  const handleStart = () => {\n    setIsActive(true);\n    handleResume();\n  };\n\n  const handleResume = () => {\n    setIsPaused(true);\n    countRef.current = setInterval(() => {\n      setTimer((timer) => timer + 1);\n    }, 1000);\n  };\n\n  const handlePause = () => {\n    clearInterval(countRef.current);\n    setIsPaused(false);\n  };\n\n  const handleReset = () => {\n    handlePause();\n    setIsActive(false);\n    setTimer(0);\n    setTimeout(() => {\n      setRedValue(0);\n      setGreenValue(180);\n    }, 1000);\n  };\n  const handlePrev = () => {\n    if (index > 0) {\n\n      if (timer > 0) {\n        saveMemberTime();\n        handleReset();\n      }\n\n      setIndex(index - 1);\n      \n      if (index > 1 && index < members.length - 2 && (members.length - index) % 2 === 0) {\n        listContainerEl.scroll({\n          top: listContainerEl.scrollTop - 96,\n          behavior: 'smooth'\n        });\n      }\n\n    }\n  };\n  const handleNext = () => {\n    if (index < members.length - 1) {\n\n      if (timer > 0) {\n        saveMemberTime();\n        handleReset();\n      }\n\n      setIndex(index + 1);\n\n      if (index > 1 && index < members.length - 2 && index % 2 === 0) {\n        listContainerEl.scroll({\n          top: listContainerEl.scrollTop + 96,\n          behavior: 'smooth'\n        });\n      }\n\n    }\n  };\n\n  const saveMemberTime = () => {\n    const localStorageMembers = localStorage.getItem(\"scrumtools-members\");\n\n    if (localStorageMembers && localStorageMembers?.length > 0) {\n      if (members[index]) {\n        const currentMember: TeamMember = members[index];\n        const today: number = parseInt(getFormattedDate(new Date()));\n\n        if (!currentMember.dailyData[today]) {\n          currentMember.dailyData[today] = {\n            time: 0,\n            status: 0,\n            emotionalStatus: 0,\n          }\n        }\n\n        if (currentMember.dailyData[today].time === 0) {\n          currentMember.dailyData[today].time = timer;\n        } else {\n          currentMember.dailyData[today].time += timer;\n        }\n\n        setMembers([...members]);\n        localStorage.setItem(\"scrumtools-members\", JSON.stringify(members));\n      }\n    }\n  };\n\n  return {\n    timer,\n    isActive,\n    isPaused,\n    handleStart,\n    handlePause,\n    handleResume,\n    handleReset,\n    handlePrev,\n    handleNext,\n  };\n};\n","import React, {\n  //BaseSyntheticEvent,\n  //MouseEventHandler,\n  useEffect,\n  //useState,\n} from \"react\";\nimport \"./teamList.scss\";\n\nimport resetIcon from \"../timer/assets/reset.svg\";\nimport { DAILYSTATES, EMOTIONALSTATES, TeamMember } from \"../interfaces/Interfaces\";\nimport { getFormattedDate, getFormattedTime } from \"../../Helpers\";\n\ninterface teamListProps {\n  members: TeamMember[];\n  setMembers: (members: TeamMember[]) => void;\n  speakingIndex: number;\n  setSpeakingIndex: any;\n}\n\nexport const TeamList = (props: teamListProps): React.ReactElement => {\n  const { members, setMembers } = props;\n  \n  let listItemClasses = \"\";\n  let totalDailyTime = 0;\n\n  const today: number = parseInt(getFormattedDate(new Date()));\n  \n  const warnTime = 120;\n  const alertTime = 180;\n  const closeToEndTime = 300;\n  \n  useEffect(() => {\n    console.log(`members`, members);\n    localStorage.removeItem(\"scrumtools-members\");\n    localStorage.setItem(\"scrumtools-members\", JSON.stringify(members));\n  }, [members]);\n\n  const resetDailyTime = (index: number) => {\n    members[index].dailyData[today].time = 0;\n    setMembers([...members]);\n  };\n\n  const nextMemberStatus = (index: number) => {\n\n    if (!members[index].dailyData[today]) {\n      members[index].dailyData = {\n        [today]: {status: 0, time: 0, emotionalStatus: 0}\n      };\n    }\n\n    members[index].dailyData[today].status += 1;\n    if (members[index].dailyData[today].status > DAILYSTATES.BLOCKED) {\n      members[index].dailyData[today].status = DAILYSTATES.none;\n    }\n\n    setMembers([...members]);\n  };\n\n  const nextMemberEmotionalStatus = (index: number) => {\n    if (!members[index].dailyData[today]) {\n      members[index].dailyData = {\n        [today]: {status: 0, time: 0, emotionalStatus: 0}\n      };\n    }\n\n    members[index].dailyData[today].emotionalStatus += 1;\n    if (members[index].dailyData[today].emotionalStatus > EMOTIONALSTATES.DOWN) {\n      members[index].dailyData[today].emotionalStatus = EMOTIONALSTATES.none;\n    }\n\n    setMembers([...members]);\n  };\n\n  const getTotalDailyTimeClass = () => {\n    return totalDailyTime > alertTime * members.length\n      ? \"overTime\"\n      : totalDailyTime > alertTime * members.length - closeToEndTime\n      ? \"closeToEnd\"\n      : totalDailyTime > 0\n      ? \"inTime\"\n      : \"\";\n  };\n  \n  const getMemberTimeClass = (member: TeamMember) => {\n\n    if (!member.dailyData[today] || member.dailyData[today].time === 0)\n      return \"\";\n\n    return member.dailyData[today].time >= alertTime\n      ? \"overTime\"\n      : member.dailyData[today].time >= warnTime\n        ? \"closeToEnd\"\n        : \"inTime\";\n  };\n\n  const getMemberTodayTime = (member: TeamMember) => {\n\n    let memberTodayTime = 0;\n\n    if (member.dailyData[today])\n      memberTodayTime = member.dailyData[today].time || 0;\n\n    return getFormattedTime(memberTodayTime).replace(/ /g, \"\");\n  }\n\n  return (\n    <div>\n      <ul className=\"listContainer\">\n        {members &&\n          members.map((member, index) => {\n            index === props.speakingIndex\n              ? (listItemClasses = \"active listItem\")\n              : (listItemClasses = \"listItem\");\n            index % 2 === 0 ? (listItemClasses += \" left\") : (listItemClasses += \" right\");\n            if (members && props.speakingIndex >= members.length)\n              props.setSpeakingIndex(0);\n\n            if (!member.dailyData)\n              member.dailyData = {\n                [today]: {status: 0, time: 0, emotionalStatus: 0}\n              };\n\n            if (member.dailyData[today] && member.dailyData[today].time)\n              totalDailyTime += member.dailyData[today].time;\n\n            return (\n              <li key={member.name} className={listItemClasses}>\n                <p\n                  className=\"memberName\"\n                  onClick={() => {\n                    props.setSpeakingIndex(index);\n                  }}\n                >\n                  {member.name}\n                </p>\n                {/* <span className=\"memberEmail\">{member.email}</span> */}\n                <p className=\"memberFlag\">\n                  <span\n                    className=\"memberFlagIcon\"\n                    data-status={member.dailyData[today] ? member.dailyData[today].status ? member.dailyData[today].status.toString() : \"0\" : \"0\"}\n                    onClick={() => {\n                      nextMemberStatus(index);\n                    }}\n                  ></span>\n                </p>\n\n                <p className=\"memberEmotionFlag\">\n                  <span\n                    className=\"memberEmotionFlagIcon\"\n                    data-emotional-status={member.dailyData[today] ? member.dailyData[today].emotionalStatus ? member.dailyData[today].emotionalStatus.toString() : \"0\" : \"0\"}\n                    onClick={() => {\n                      nextMemberEmotionalStatus(index);\n                    }}\n                  ></span>\n                </p>\n\n                <p className=\"memberTime\">\n                  <button\n                    className=\"resetDailyTime\"\n                    onClick={() => {\n                      resetDailyTime(index);\n                    }}\n                  >\n                    <img src={resetIcon} alt=\"Reset\" />\n                  </button>\n                  <span\n                    className={getMemberTimeClass(member)}\n                  >\n                    {getMemberTodayTime(member)}\n                  </span>\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n      <div className=\"totalDailyTime\">\n        <h4>Total daily time:</h4>\n        <span className={\"totalDailyTimeValue \" + getTotalDailyTimeClass()}>\n          {getFormattedTime(totalDailyTime).replace(/ /g, \"\")}\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./primeDirective.scss\"\n\ninterface PrimeDirectiveProps {\n  content: string;\n  author?:string;\n}\n\nexport const PrimeDirective = (\n  props: PrimeDirectiveProps\n): React.ReactElement => {\n  return (\n    <div className=\"pdContainer\">\n      <h3 className=\"pdTitle\">Prime Directive</h3>\n      <p className=\"pdContent\">{props.content}</p>\n      <p className=\"pdAuthor\">{props.author}</p>\n    </div>\n  );\n};\n","import React, { BaseSyntheticEvent } from \"react\";\nimport { Responsive, Layout } from \"react-grid-layout\";\n\nimport \"@root/../../node_modules/react-grid-layout/css/styles.css\";\nimport \"@root/../../node_modules/react-resizable/css/styles.css\";\nimport \"./GridLayout.scss\";\n\n// COMPONENTS\nimport { IGridBreakpoints } from \"../interfaces/Interfaces\";\n\nconst breakpoints: IGridBreakpoints = {\n  lg: 2400,\n  md: 1800,\n  sm: 1100,\n  xs: 700,\n  xxs: 0,\n};\nconst cols = { lg: 1, md: 1, sm: 1, xs: 1, xxs: 1 };\n\nexport interface LayoutProps {\n  setMembers: any;\n  TeamMembers: any[];\n}\n\nexport const GridLayoutResizable = ({\n  TeamMembers,\n  setMembers,\n}: LayoutProps): React.ReactElement => {\n  //const [layout, setLayout] = useState(TeamMembers);\n  const auxMembers: any[] = [];\n  const handleLayoutChange = (layout: Layout[]) => {\n    console.log(`layoutChanged`, layout);\n\n    layout.sort((a: Layout, b: Layout) => {\n      if (a.y > b.y) {\n        return 1;\n      }\n      if (a.y < b.y) {\n        return -1;\n      }\n      // a must be equal to b\n      return 0;\n    });\n\n    layout.map((item) => {\n      return auxMembers.push({name: item.i});\n    });\n    setMembers(auxMembers);\n  };\n\n  const removeMember = (event: BaseSyntheticEvent) => {\n    const target =\n      event.target.parentNode.querySelector(\".memberName\").innerHTML;\n    setMembers(\n      TeamMembers.filter((memb) => {\n        return memb.name !== target;\n      })\n    );\n  };\n\n  return (\n    <Responsive\n      isDraggable={true}\n      isResizable={false}\n      style={{ width: \"450px\", overflowY: \"auto\", overflowX:\"hidden\", minHeight: \"10rem\", maxHeight: \"10rem\"}}\n      containerPadding={[0, 0]}\n      breakpoints={breakpoints}\n      cols={cols}\n      rowHeight={6}\n      margin={[10, 10]}\n      onLayoutChange={handleLayoutChange}\n      /*\n       * This allows setting the initial width on the server side.\n       * This is required unless using the HOC <WidthProvider> or similar.\n       * 76 is the space occupied by the left & right margins.\n       * 36 is the space occupied by the vertical right scrollBar.\n       * 290 is the space occupied by the left panel when unfolded.\n       */\n      width={450}\n      // Callback when the width changes, so you can modify the layout as needed.\n      // Callback so you can save the layout.\n      // Calls when resize starts.\n    >\n      {TeamMembers.map((member, index) => {\n        // plugins\n        return (\n          <div\n            className=\"layoutItem active\"\n            key={member.name}\n            data-grid={{ x: 0, y: index, w: 3, h: 3 }}\n          >\n            <p className=\"memberName\">{member.name}</p>\n            <span className=\"removeMember\" onClick={removeMember}>\n              x\n            </span>\n          </div>\n        );\n      })}\n    </Responsive>\n  );\n};\n","import React, { createRef, useState, useEffect, useLayoutEffect } from 'react'\n\n/**\n * Returns the size of the component window in real time.\n *\n * @export\n * @return {*}  {number[]}\n */\nexport const useContainerDimensions = (myRef: React.RefObject<any>): Record<any, any> => {\n  const [size, setSize] = useState([0, 0])\n\n  useEffect(() => {\n    if (myRef.current) {\n        const { current } = myRef\n        const boundingRect = current.getBoundingClientRect()\n        const { width, height } = boundingRect\n        setSize([Math.round(width), Math.round(height)])\n    }\n  }, [myRef]) // --> FRAN, this is the line which throws conflicts\n\n  return size\n}\n\n/**\n * Returns the size of the browser window in real time.\n *\n * @export\n * @return {*}  {number[]}\n */\nexport function useWindowSize(): number[] {\n  const [size, setSize] = useState([0, 0])\n\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize);\n  }, [])\n\n  return size\n}\n\n/**\n * Component created JUST TO TEST the useWindowSize()functionality.\n * \n * @export\n */\nexport const TestWindowSize = (): React.ReactElement => {\n    const [width, height] = useWindowSize()\n\n    return (\n        <div>\n            <span>Window size: {width} x {height}</span>\n        </div>\n    )\n}\n\n/**\n * Component created JUST TO TEST the useContainerDimensions()functionality.\n * \n * @export\n */\n export const TestContainerDimensions = (): React.ReactElement => {\n  const divRef = createRef()\n  const dimensions = useContainerDimensions(divRef)\n\n  return (\n      <div style={{ height: '100vh', width: '100vw' }}>\n        <div\n          ref={divRef as React.RefObject<any>}\n          style={{\n            margin: '50px',\n            width: '70%',\n            height: '70%',\n            border: '1px solid black',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Dimensions: {dimensions.width}w {dimensions.height}h\n        </div>\n      </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/theme-icon.9a0c0f53.svg\";","import React, { useState, useEffect } from 'react'\nimport './App.scss'\nimport { Timer } from './components/timer'\nimport { TeamList } from './components/teamList'\nimport { PrimeDirective } from './components/primeDirective/primeDirective'\nimport { GridLayoutResizable } from './components/gridLayout'\nimport themeIcon from './assets/theme-icon.svg'\nimport { TeamMember } from './components/interfaces/Interfaces'\nimport { getFormattedDate } from './Helpers'\n\nfunction App() {\n\tconst [speakingIndex, setSpeakingIndex] = useState(+getSpeakingFromLocalStorage())\n\tconst [members, setMembers] = useState<TeamMember[]>(getMembersFromLocalStorage())\n\tconst [isEditMode, setIsEditMode] = useState(false)\n\tconst [theme, setTheme] = useState(getThemeFromLocalStorage())\n\n\tconst pd = ` Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand. `\n\tconst [newMember, setnewMember] = useState('')\n\tconst today = parseInt(getFormattedDate(new Date()))\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('scrumtools-theme', theme)\n\t}, [theme])\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('scrumtools-speaking', speakingIndex.toString())\n\t}, [speakingIndex])\n\n\tuseEffect(() => {\n\t\tconst newMembers = getMembersFromLocalStorage()\n\t\tsetMembers(newMembers)\n\t}, [isEditMode])\n\n\tconst addMember = () => {\n\t\tif (newMember === '@pandora') {\n\t\t\tsetMembers([...members, ...generatePandoraMembers()])\n\t\t\treturn\n\t\t}\n\n\t\tif (newMember !== '') {\n\t\t\tconst newMemberData: TeamMember = {\n\t\t\t\tname: newMember,\n\t\t\t\tdailyData: {\n\t\t\t\t\t[today]: { time: 0, status: 0, emotionalStatus: 0 },\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tlocalStorage.setItem('scrumtools-members', JSON.stringify([...members, newMemberData]))\n\n\t\t\tsetMembers([...members, newMemberData])\n\t\t}\n\t}\n\n\tconst toggleTheme = () => {\n\t\tconst newTheme = theme === 'dark' ? 'light' : 'dark'\n\t\tsetTheme(newTheme)\n\t}\n\n\tconst handleKeyPress = (event: any) => {\n\t\tif (event.code === 'NumpadEnter' || event.code === 'Enter') addMember()\n\t}\n\n\treturn (\n\t\t<div className={'App ' + theme}>\n\t\t\t<div className='themeSwitcher' onClick={toggleTheme}>\n\t\t\t\t<img src={themeIcon} alt='Change theme' />\n\t\t\t</div>\n\t\t\t<Timer index={speakingIndex} setIndex={setSpeakingIndex} members={members} setMembers={setMembers} />\n\t\t\t<div className='daily-script'>\n\t\t\t\t<ul className='daily-script__list'>\n\t\t\t\t\t<li className='daily-script__list_item'>What I did last day</li>\n\t\t\t\t\t<li className='daily-script__list_item'>What I am going to do today</li>\n\t\t\t\t\t<li className='daily-script__list_item'>I have (not) blockers</li>\n\t\t\t\t\t<li className='daily-script__list_item'>I think AC &amp; SP for my task are (not) OK</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className='memberList'>\n\t\t\t\t<h3 className='members-title'>Members</h3>\n\t\t\t\t<button className='editButton' onClick={() => setIsEditMode(!isEditMode)}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t{!isEditMode ? 'Edit' : 'Save'}\n\t\t\t\t</button>\n\t\t\t\t{!isEditMode ? (\n\t\t\t\t\t<TeamList members={members} setMembers={setMembers} speakingIndex={speakingIndex} setSpeakingIndex={setSpeakingIndex}></TeamList>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* <div className=\"generate-members\">\n              <button\n                className=\"generate-members__button\"\n                onClick={generatePandoraMembers}\n              >\n                Generate Pandora members\n              </button>\n            </div> */}\n\t\t\t\t\t\t<li className='listItem inputMember'>\n\t\t\t\t\t\t\t<div className='form-field__control'>\n\t\t\t\t\t\t\t\t<input className='form-field__input' type={'text'} value={newMember} onChange={(event) => setnewMember(event.target.value)} placeholder=\"New member's name\" onKeyDown={handleKeyPress} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className='addMember' onClick={addMember}>\n\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<GridLayoutResizable TeamMembers={members} setMembers={setMembers} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<PrimeDirective content={pd} author='--Norm Kerth'></PrimeDirective>\n\t\t</div>\n\t)\n}\n\nexport default App\n\nfunction generatePandoraMembers() {\n\tconst today = parseInt(getFormattedDate(new Date()))\n\n\tconst pandoraMembers: TeamMember[] = [\n\t\t{\n\t\t\tname: 'Diego',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Ale',\n\t\t\tdailyData: {},\n\t\t},\n\n\t\t{\n\t\t\tname: 'Fran',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Javi',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Eric',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Ruben',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Jaime',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Sergio',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Jesús',\n\t\t\tdailyData: {},\n\t\t},\n\t\t{\n\t\t\tname: 'Davide',\n\t\t\tdailyData: {},\n\t\t},\n\t]\n\tlocalStorage.setItem('scrumtools-members', JSON.stringify(pandoraMembers))\n\treturn pandoraMembers\n}\n\nfunction getMembersFromLocalStorage(): TeamMember[] {\n\tconst localStorageMembers = localStorage.getItem('scrumtools-members')\n\n\tif (localStorageMembers && localStorageMembers?.length > 0) {\n\t\treturn JSON.parse(localStorageMembers) as TeamMember[]\n\t}\n\n\treturn []\n}\n\nfunction getThemeFromLocalStorage(): string {\n\treturn localStorage.getItem('scrumtools-theme') || 'dark'\n}\n\nfunction getSpeakingFromLocalStorage(): string {\n\treturn localStorage.getItem('scrumtools-speaking') || '0'\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}